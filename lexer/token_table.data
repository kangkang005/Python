1 keyword int
1 identifier a
1 operator =
1 number 3+2i
1 limiter ,
1 identifier b
1 operator =
1 number 4
1 limiter ,
1 identifier c
1 operator =
1 number 2.45e+55
1 limiter ;
3 keyword function
3 keyword int
3 identifier max
3 limiter (
3 keyword int
3 identifier a
3 limiter ,
3 keyword int
3 identifier b
3 limiter )
3 limiter {
4 keyword if
4 limiter (
4 identifier a
4 operator >=
4 identifier b
4 limiter )
4 keyword return
4 identifier a
4 limiter ;
5 keyword else
5 keyword return
5 identifier b
5 limiter ;
6 limiter }
7 keyword function
7 keyword double
7 identifier min
7 limiter (
7 keyword int
7 identifier A
7 limiter ,
7 keyword int
7 identifier B
7 limiter )
7 limiter {
8 keyword if
8 limiter (
8 identifier A
8 operator <
8 identifier B
8 limiter )
8 keyword return
8 identifier A
8 limiter ;
9 keyword else
9 keyword return
9 identifier B
9 limiter ;
10 limiter }
12 keyword function
12 keyword int
12 identifier main
12 limiter (
12 limiter )
12 limiter {
13 keyword int
13 identifier a
13 limiter ;
14 keyword double
14 identifier a_bb
14 limiter ;
15 keyword double
15 identifier sum_1_to_50
15 operator =
15 number 1
15 limiter ;
16 keyword for
16 limiter (
16 keyword int
16 identifier i
16 operator =
16 number 1
16 limiter ;
16 identifier i
16 operator <
16 number 100
16 limiter ;
16 identifier i
16 operator +
16 operator =
16 number 1
16 limiter )
16 limiter {
17 keyword if
17 limiter (
17 identifier i
17 operator <
17 number 50
17 limiter )
17 keyword break
17 limiter ;
18 keyword else
18 identifier sum_1_to_50
18 operator +
18 operator =
18 identifier i
18 limiter ;
19 limiter }
20 keyword int
20 identifier k
20 operator =
20 number 0
20 limiter ,
20 identifier s
20 operator =
20 limiter (
20 limiter (
20 number 534
20 operator -
20 number 23
20 limiter )
20 operator +
20 number 423
20 limiter )
20 operator *
20 number 23
20 limiter ;
21 keyword while
21 limiter (
21 identifier k
21 operator <
21 number 40
21 limiter )
21 keyword scanf
21 limiter (
21 identifier s
21 limiter )
21 limiter ;
23 keyword int
23 identifier A
23 operator =
23 number 50
23 limiter ,
23 identifier B
23 operator =
23 number 23
23 limiter ,
23 identifier C
23 limiter ;
24 identifier C
24 operator =
24 keyword function
24 identifier max
24 limiter (
24 identifier A
24 limiter ,
24 identifier B
24 limiter )
24 limiter ;
25 keyword print
25 limiter (
25 identifier C
25 limiter )
25 limiter ;
26 keyword print
26 limiter (
26 identifier A
26 operator +
26 identifier B
26 operator *
26 identifier C
26 limiter )
26 limiter ;
28 keyword return
28 number 0
28 limiter ;
29 limiter }
